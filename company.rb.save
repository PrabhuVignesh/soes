class Company
	def initialize(company_name,quantity)
		@company_name = company_name
		@quantity = quantity
	end
	def update(company_name,quantity)
		@company_name = company_name
		@quantity = quantity
	end
	def company_name
		@company_name
	end 

	def quantity
		@quantity
	end
	def after_buy
		@after_buy
	end

	def after_sell
		@after_sell
	end
	def buy(qty)
		@after_buy = self.after_buy != nil ? self.after_buy + qty : qty
		self.update(self.company_name,@after_buy)
	end

	def sell(qty)
		@after_sell =  self.after_sell - qty if self.after_sell != nil
		self.update(self.company_name,@after_sell)
	end
	
	def status_buy
		if @after_buy > 0 
			@status = 'open'
		else
			@status = 'close'
		end
	end

	def status_sell
		if @after_sell > 0			
			@status = 'open'
		else
			@status = 'close'
		end
	end
end

ABC = Company.new('ABC',0)
XYZ = Company.new('XYZ',0)


# ============ company ABC 1st iter ================
p "============ company #{ABC.company_name}  1st iter ================"

ABC.buy(10)
p ABC.quantity
p ABC.status_buy

# ============ company XYZ 2st iter ================
p "============ company #{ XYZ.company_name }2st iter ================"

XYZ.sell(15)
p XYZ.quantity
p XYZ.status_sell

# ============ company ABC 3st iter ================
p "============ company #{ABC.company_name}  2st iter ================"

ABC.sell(13)
p ABC.quantity
p ABC.status_sell

# ============ company XYZ 4st iter ================
p "============ company #{ XYZ.company_name} 2st iter ================"

XYZ.buy(10)
p XYZ.quantity
p XYZ.status_buy

# ============ company XYZ 5st iter ================
p "============ company #{XYZ.company_name}  2st iter ================"

XYZ.buy(8)
p XYZ.quantity
p XYZ.status_buy
